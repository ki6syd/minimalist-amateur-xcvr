---
openapi: 3.0.0
info:
  title: MAX-3B
  description: API for MAX-3B radio
  contact:
    email: ki6syd@gmail.com
  version: 1.0.2
servers:
- url: http://radio.local/api/v1
  description: Base URL
tags:
- name: DigitalModes
  description: Communication DigitalModes
- name: RadioInfo
  description: Basic information about radio
paths:
  /ft8:
    post:
      tags:
      - DigitalModes
      summary: Send a FT8 free text message
      parameters:
      - name: messageText
        in: query
        description: 13 character free-text FT8 message to send
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: timeNow
        in: query
        description: "Caller's current time [epoch ms]. If provided, radio will update its current time to match timeNow. If not provided, radio will use its best estimate of current time."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: rfFrequency
        in: query
        description: "Dial frequency for sending [Hz]. If not provided, radio will pick a frequency using firmware-defined logic."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: audioFrequency
        in: query
        description: "Audio frequency (USB) [hz] relative to RF dial frequency [Hz]. If not provided, radio will pick an audio frequency using firmware-programmed logic. If audioFrequency is provided but rfFrequency is not provided, behavior is undefined."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: ignoreTime
        in: query
        description: "If set true, FT8 transmission will begin immediately without waiting for the next 15 second window. If set false or not included, the radio will wait for the next transmission window based on its internal time estimate."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "201":
          description: Message added to queue
        "400":
          description: Invalid / not understood
        "409":
          description: Unable to accept message into queue
  /wspr:
    post:
      tags:
      - DigitalModes
      summary: Send a WSPR message
      parameters:
      - name: callSign
        in: query
        description: Callsign (6 characters maximum)
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: timeNow
        in: query
        description: "Caller's current time [epoch ms]. If provided, radio will update its current time to match timeNow. If not provided, radio will use its best estimate of current time."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: rfFrequency
        in: query
        description: "Dial frequency for sending [Hz]. If not provided, radio will pick a frequency using firmware-defined logic."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: audioFrequency
        in: query
        description: "Audio frequency (USB) [Hz] relative to RF dial frequency [Hz]. If not provided, radio will pick an audio frequency using firmware-programmed logic. If audioFrequency is provided but rfFrequency is not provided, behavior is undefined."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: gridSquare
        in: query
        description: Grid square used for WSPR transmission (4 characters maximum)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: power
        in: query
        description: "Power level [dBm] used for WSPR transmission information (dBm). Does not"
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: ignoreTime
        in: query
        description: "If set true, FT8 transmission will begin immediately without waiting for the next transmission second window. If set false or not included, the radio will wait for the next transmission window based on its internal time estimate."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "201":
          description: Message added to queue
        "400":
          description: Invalid / not understood
        "409":
          description: Unable to accept message into queue
  /cw:
    post:
      tags:
      - DigitalModes
      summary: Send a CW message
      parameters:
      - name: messageText
        in: query
        description: String to send
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: rfFrequency
        in: query
        description: "Dial frequency for sending [Hz]. If not provided, radio will pick a frequency using firmware-defined logic."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: Message added to queue
        "400":
          description: Invalid / not understood
        "409":
          description: Unable to accept message into queue
  /queue:
    get:
      tags:
      - DigitalModes
      summary: Length of the radio's queue of digital messages
      responses:
        "200":
          description: Number of total messages in radio's queue of digital modes messages
          content:
            text/plain:
              schema:
                type: integer
    delete:
      tags:
      - DigitalModes
      summary: "Stop sending any queued messages, and delete all messages."
      responses:
        "204":
          description: Stopped and deleted messages.
        "404":
          description: Nothing to delete.
  /time:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's current time
      responses:
        "200":
          description: "Current time [epoch ms]"
        "404":
          description: Time has never been set.
          content:
            text/plain:
              schema:
                type: integer
    put:
      tags:
      - RadioInfo
      summary: Set the radio's time
      parameters:
      - name: timeNow
        in: query
        description: "Current time [epoch ms]."
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: Time accepted
        "400":
          description: Invalid / not understood
  /frequency:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's current frequency
      responses:
        "200":
          description: "Current dial frequency [Hz]"
          content:
            text/plain:
              schema:
                type: integer
    put:
      tags:
      - RadioInfo
      summary: Set the radio's dial frequency
      parameters:
      - name: frequency
        in: query
        description: "New frequency [Hz]"
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: Frequency accepted
        "400":
          description: Invalid / not understood
  /volume:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's current audio volume
      responses:
        "200":
          description: "Current sidetone level [arbitrary units]"
          content:
            text/plain:
              schema:
                type: integer
    put:
      tags:
      - RadioInfo
      summary: Set the radio's volume
      parameters:
      - name: audioLevel
        in: query
        description: "Audio volume while receiving [arbitrary units]"
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: Volume accepted
        "400":
          description: Out of range / invalid / not understood
  /sidetone:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's current sidetone level offset
      responses:
        "200":
          description: "Current sidetone level offset [arbitrary units]"
          content:
            text/plain:
              schema:
                type: integer
    put:
      tags:
      - RadioInfo
      summary: "Set the radio's sidetone level OFFSET, relative to audio level"
      parameters:
      - name: sidetoneLevelOffset
        in: query
        description: "Sidetone volume OFFSET while receiving, relative to audio level [arbitrary units]"
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: Sidetone level accepted
        "400":
          description: Out of range / invalid / not understood
  /cwSpeed:
    get:
      tags:
      - RadioInfo
      summary: Gets the keyer's speed
      responses:
        "200":
          description: "Current keyer speed [wpm]"
          content:
            text/plain:
              schema:
                type: integer
    put:
      tags:
      - RadioInfo
      summary: Set the keyer's speed
      parameters:
      - name: speed
        in: query
        description: "Keyer speed [wpm]"
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: Speed accepted
        "400":
          description: Out of range / invalid / not understood
  /rxBandwidth:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's rx bandwidth
      responses:
        "200":
          description: Current rx bandwith
          content:
            text/plain:
              schema:
                type: string
                enum:
                - CW
                - SSB
    put:
      tags:
      - RadioInfo
      summary: Set the radio's rx bandwidth
      parameters:
      - name: bw
        in: query
        description: Audio filter bandwidth
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CW
          - SSB
      responses:
        "201":
          description: Bandwidth accepted
        "400":
          description: Out of range / invalid / not understood
  /lna:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's LNA state
      responses:
        "200":
          description: Current LNA state
          content:
            text/plain:
              schema:
                type: string
                enum:
                - "true"
                - "false"
    put:
      tags:
      - RadioInfo
      summary: Set the radio's LNA on or off
      parameters:
      - name: lnaState
        in: query
        description: LNA state
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "true"
          - "false"
      responses:
        "201":
          description: LNA setting accepted
        "400":
          description: Out of range / invalid / not understood
  /antenna:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's antenna path
      responses:
        "200":
          description: Current antenna state
          content:
            text/plain:
              schema:
                type: string
                enum:
                - DIRECT
                - EFHW
    put:
      tags:
      - RadioInfo
      summary: Set the radio's antenna connection
      parameters:
      - name: antennaPath
        in: query
        description: Requested RF pathway to connect to antenna
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - DIRECT
          - EFHW
      responses:
        "201":
          description: Antenna setting accepted
        "400":
          description: Out of range / invalid / not understood
  /speaker:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's speaker state
      responses:
        "200":
          description: Current speaker state
          content:
            text/plain:
              schema:
                type: string
                enum:
                - "true"
                - "false"
    put:
      tags:
      - RadioInfo
      summary: Set the internal speaker
      parameters:
      - name: speakerState
        in: query
        description: LNA state
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "true"
          - "false"
      responses:
        "201":
          description: Speaker setting accepted
        "400":
          description: Out of range / invalid / not understood
  /inputVoltage:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's measured input voltage
      responses:
        "200":
          description: "Current input voltage [V]"
          content:
            text/plain:
              schema:
                type: integer
  /sMeter:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's S-Meter reading
      responses:
        "200":
          description: "Current signal strength [S-units]"
          content:
            text/plain:
              schema:
                type: integer
  /temperature:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's temperature
      responses:
        "200":
          description: "Current temperature. Radio implementation decides which temperature to report, if multiple available."
          content:
            text/plain:
              schema:
                type: integer
  /rxTxStatus:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's receive or transmit status
      responses:
        "200":
          description: Current status
          content:
            text/plain:
              schema:
                type: string
                enum:
                - RX
                - TX
  /githash:
    get:
      tags:
      - RadioInfo
      summary: Gets the githash of the current firmware
      responses:
        "200":
          description: githash
          content:
            text/plain:
              schema:
                type: string
  /heap:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's available heap space
      responses:
        "200":
          description: Free heap space in bytes
          content:
            text/plain:
              schema:
                type: integer
  /address:
    get:
      tags:
      - RadioInfo
      summary: Gets the IP and/or MAC address of the radio
      responses:
        "200":
          description: ip address
          content:
            text/plain:
              schema:
                type: string
  /hwRevision:
    get:
      tags:
      - RadioInfo
      summary: Information about radio hardware
      responses:
        "200":
          description: Information about radio hardware
          content:
            text/plain:
              schema:
                type: string
  /unitSerial:
    get:
      tags:
      - RadioInfo
      summary: Hardware serial number
      responses:
        "200":
          description: Radio's serial number
          content:
            text/plain:
              schema:
                type: string
  /api:
    get:
      tags:
      - RadioInfo
      summary: "Gets the API versions supported by the radio. Note, there is no base URL for this action"
      responses:
        "200":
          description: Highest API version implemented by the radio
          content:
            text/plain:
              schema:
                type: string
  /selfTest:
    post:
      tags:
      - RadioInfo
      summary: Routines for characterization. All return an array of XY points
      parameters:
      - name: testName
        in: query
        description: Type of self-test to run
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - BPF
          - XTAL
          - AUDIO
          - XMIT
          - NOISE
      responses:
        "201":
          description: Data collected
          content:
            application/json:
              schema:
                type: array
                example:
                - x: 1
                  "y": 2
                - x: 2
                  "y": 3
                items:
                  type: object
        "400":
          description: Unable to complete routine
  /debug:
    get:
      tags:
      - RadioInfo
      summary: Gets the radio's debug variable
      responses:
        "200":
          description: Current debug variable. Radio picks the value to send depending on context.
          content:
            text/plain:
              schema:
                type: integer
    post:
      tags:
      - RadioInfo
      summary: Run special code intended only for debug
      parameters:
      - name: command
        in: query
        description: Special command number
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: value
        in: query
        description: Data corresponding to command
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Accepted
        "400":
          description: Out of range / invalid / not understood
  /ota:
    post:
      tags:
      - RadioInfo
      summary: "Over the air firmware update. Note, there is no base URL for this action"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ota_body'
      responses:
        "201":
          description: Accepted
        "400":
          description: Out of range / invalid / not understood
components:
  schemas:
    ota_body:
      type: object
      properties:
        orderId:
          type: integer
        userId:
          type: integer
        fileName:
          type: string
          format: binary
